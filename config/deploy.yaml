#@ load("@ytt:data", "data")
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: #@ data.values.namespace
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: cis-service-certificate
  namespace: #@ data.values.namespace
spec:
  secretName: cis-service-certificate
  dnsNames:
  - #@ "cis-service." + data.values.namespace + ".svc"  
  issuerRef:
    name: selfsigned-issuer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cis-service
  namespace: #@ data.values.namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cis-service
  template:
    metadata:
      labels:
        app: cis-service
    spec:
      containers:
      - name: controller
        image: #@ data.values.python_image
        command: ["/bin/sh","-c"]
        args: ["pip install flask jsonpatch kubernetes; python /hooks/mutate.py"]
        env:
        - name: CIS_WEBHOOK_VERSION
          value: #@ data.values.cis_webhook_version
        - name: PYTHON_IMAGE
          value: #@ data.values.python_image
        ports:
        - name: http
          containerPort: 8443
        volumeMounts:
        - name: hooks
          mountPath: /hooks
        - name: ssl-cis-service
          mountPath: /ssl
      volumes:
      - name: hooks
        configMap:
          name: cis-mutate
      - name: ssl-cis-service
        secret:
          secretName: cis-service-certificate
---
apiVersion: v1
kind: Service
metadata:
  name: cis-service
  namespace: #@ data.values.namespace
spec:
  selector:
    app: cis-service
  ports:
  - port: 443
    targetPort: 8443

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cis-mutate
  namespace: #@ data.values.namespace
data:
  mutate.py: #@ data.read("mutate.py")


---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: cis-service
  annotations:
    cert-manager.io/inject-ca-from: #@ data.values.namespace + "/cis-service-certificate"
webhooks:
  - name: cis-service.cis-service.svc
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values: ["tkg-system"]
    failurePolicy: Fail
    clientConfig:
      service:
        name: cis-service
        namespace: #@ data.values.namespace
        path: "/mutate"
    rules:
      - operations: [ "CREATE","UPDATE" ]
        apiGroups: ["run.tanzu.vmware.com"]
        apiVersions: ["v1alpha3"]
        resources: ["clusterbootstraps"]
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    timeoutSeconds: 5
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cis-service-webhook
rules:
- apiGroups: ["cluster.x-k8s.io"]
  resources: ["clusters"]
  verbs: ["list","get","watch"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cis-service-webhook
subjects:
- kind: ServiceAccount
  name: default
  namespace: #@ data.values.namespace
roleRef:
  kind: ClusterRole
  name: cis-service-webhook
  apiGroup: rbac.authorization.k8s.io
